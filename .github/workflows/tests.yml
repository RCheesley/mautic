name: Mautic tests and validations

on:
  push:
    branches:
      - staging
      - features
      - '[0-9]+\.[0-9]+'
  pull_request:
  schedule:
    # Run every day at 10 AM UTC to discover potential issues with dependencies like PHP updates etc.
    - cron: '0 10 * * *'

jobs:
  phpunit:
    needs: cypress
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['7.4']
        db-types: ['mysql', 'mariadb']
  
    name: PHPUnit ${{ matrix.php-versions }} ${{ matrix.db-types }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
      # Codecov needs access to previous commits, so we add fetch-depth: 0
      with:
        fetch-depth: 0
    
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: pcov
        ini-values: pcov.directory=., pcov.exclude="~tests|themes|vendor~"
    
    - name: Set SYMFONY_ENV to test
      run: echo "SYMFONY_ENV=test" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        composer validate
        composer install --prefer-dist --no-progress --no-suggest

    - name: Temp install Mautic first due to failing tests
      env:
        mysql_port: ${{ job.services.mysql.ports[3306] }}
        mariadb_port: ${{ job.services.mariadb.ports[3306] }}
      run: |
        export DB_PORT_STRING="${{ matrix.db-types }}_port"
        export DB_PORT=${!DB_PORT_STRING}

        cp ./.github/ci-files/local.php ./app/config/local.php
        php bin/console mautic:install --force http://localhost

    - name: Run tests - database = ${{ matrix.db-types }}
      run: |
        export DB_PORT_STRING="${{ matrix.db-types }}_port"
        export DB_PORT=${!DB_PORT_STRING}

        if [[ "${{ matrix.php-versions }}" == "7.4" ]] && [[ "${{ matrix.db-types }}" == "mysql" ]]; then
          composer test -- --coverage-clover=coverage.xml
        else
          composer test
        fi
      env:
        mysql_port: ${{ job.services.mysql.ports[3306] }}
        mariadb_port: ${{ job.services.mariadb.ports[3306] }}

    - name: Run Pipedrive tests separately due to bug
      run: |
        export DB_PORT_STRING="${{ matrix.db-types }}_port"
        export DB_PORT=${!DB_PORT_STRING}

        composer test -- plugins/MauticCrmBundle/Tests/Pipedrive

    - name: Upload coverage report
      if: ${{ matrix.php-versions == '7.4' && matrix.db-types == 'mysql' }}
      uses: codecov/codecov-action@v1
      with:
        files: ./coverage.xml
        fail_ci_if_error: true

    - name: Slack Notification if tests fail
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() && github.event_name == 'schedule' }}
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'The daily GitHub Actions tests in mautic/mautic have failed. Most likely something external has changed, like a PHP version update.'

    - name: Store log artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: logs-${{ matrix.php-versions }}-${{ matrix.db-types }}
        path: ./var/logs/*

  misc:
    needs: cypress
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        commands: ['PHPSTAN', 'CS Fixer']

    name: ${{ matrix.commands }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v6.2

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        ini-values: max_execution_time=360

    - name: Install dependencies
      run: |
        composer validate
        composer install --prefer-dist --no-progress --no-suggest
    
    - name: Run ${{ matrix.commands }}
      run: |
        if [[ "${{ matrix.commands }}" == "PHPSTAN" ]]; then
          composer phpstan
        elif [[ "${{ matrix.commands }}" == "Rector" ]]; then
          composer rector -- --dry-run --no-progress-bar
        elif [[ "${{ matrix.commands }}" == "CS Fixer" ]]; then
          for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
            if [[ $file == *.php ]]; then
              cs_fix_files="${cs_fix_files} $file"
            fi
          done
          if [[ $cs_fix_files ]]; then
            bin/php-cs-fixer fix --config=.php_cs -v --dry-run --using-cache=no --show-progress=dots --diff $cs_fix_files
          fi
        else
          echo "Invalid command"
          exit 1
        fi
  cypress:
    name: Cypress
    runs-on: ubuntu-20.04
    env:
      MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
      MAILER_HOST: ${{ secrets.MAILER_HOST }}
      MAILER_USER: ${{ secrets.MAILER_USER }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set DB port to env
        run: echo "DB_PORT=${{ job.services.mysql.ports[3306] }}" >> $GITHUB_ENV

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          # Note: if you update the PHP version here, make sure to update libapache-mod-php7.4 below as well!
          php-version: 7.4
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
          ini-values: max_execution_time=180

      - name: Install Apache
        run: |
          sudo add-apt-repository ppa:ondrej/php -y
          sudo add-apt-repository ppa:ondrej/apache2 -y
          sudo apt-get install apache2 libapache2-mod-php7.4
          sudo a2enmod rewrite
          sudo cp ./.github/workflows/mautic-apache.conf /etc/apache2/conf-available/mautic.conf
          sudo a2enconf mautic
          sudo service apache2 restart

      - name: Install dependencies
        run: |
          composer validate
          composer install --prefer-dist --no-progress

      # We need to move files into /var/www/html because the test suite
      # expects Mautic to run in the root folder http://localhost
      - name: Move files to web root
        run: |
          cp $GITHUB_WORKSPACE/.github/ci-files/local.php $GITHUB_WORKSPACE/app/config/local.php
          shopt -s dotglob
          sudo chmod -R 777 /var/www/html
          sudo chown -R www-data:www-data /var/www/html
          rm -rf /var/www/html/*
          mv $GITHUB_WORKSPACE/* /var/www/html

      - name: Install Mautic
        run: |
          php bin/console mautic:install --force --mailer_from_name="GitHub Actions" http://localhost
          php bin/console cache:warmup --no-interaction --env=prod
          sudo chmod -R 777 /var/www/html
          sudo chown -R www-data:www-data /var/www/html
        working-directory: /var/www/html

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          config: baseUrl=http://localhost
          env: CI=true
          working-directory: /var/www/html
          record: true
          group: 'Mautic Cypress'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # If one or more Cypress tests fail, upload screenshots as artifacts
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: /var/www/html/cypress/screenshots

        # Test run video is always captured, so this action uses the "always()" condition
      - name: Upload Cypress test run video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: /var/www/html/cypress/videos

      - name: Upload Mautic log files as artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: mautic-logs
          path: /var/www/html/var/logs

    - name: Slack Notification if tests fail
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() && github.event_name == 'schedule' }}
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'The daily GitHub Actions tests in mautic/mautic have failed. Most likely something external has changed, like a PHP version update.'
